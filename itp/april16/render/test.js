// Generated by CoffeeScript 1.6.3
(function() {
  var animate, drawing_renderer, flip_person, graphics, ground, h, house, init, init_bg, init_ground, init_house, init_person, next_bg, paper_current, paper_sprite, paper_textures, person, person_facing_right, render_graphics, renderer, stage, w;

  stage = new PIXI.Stage(0xFFFFFF);

  w = 688;

  h = 480;

  renderer = new PIXI.WebGLRenderer(w, h, null, null, true);

  graphics = new PIXI.Graphics;

  drawing_renderer = new UTIL.renderer(graphics, w, h);

  window.r = drawing_renderer;

  drawing_renderer.translate(0, 0, -5);

  noise.seed(Math.random());

  init = function() {
    document.body.appendChild(renderer.view);
    init_ground();
    init_house();
    init_person();
    stage.addChild(graphics);
    setInterval(render_graphics, 60);
    return requestAnimationFrame(animate);
  };

  paper_current = 0;

  paper_textures = new Array;

  paper_sprite = null;

  house = null;

  init_house = function() {
    var body, door, roof;
    house = new UTIL.geometry_2d();
    window.house = house;
    body = new UTIL.geometry_2d();
    body.add_vertex([-1, 2]);
    body.add_vertex([1, 2]);
    body.add_vertex([1, 0]);
    body.add_vertex([-1, 0]);
    body.add_vertex([-1, 2]);
    house.add(body);
    roof = new UTIL.geometry_2d();
    roof.add_vertex([-1, 0]);
    roof.add_vertex([0, -1]);
    roof.add_vertex([1, 0]);
    roof.add_vertex([-1, 0]);
    house.add(roof);
    door = new UTIL.geometry_2d();
    door.add_vertex([-0.3, 2]);
    door.add_vertex([-0.3, 0.5]);
    door.add_vertex([0.3, 0.5]);
    door.add_vertex([0.3, 2]);
    house.add(door);
    vec3.set(house.states["default"].translate_vec, 3, -5, -5);
    vec3.set(house.states["default"].scale_vec, 4, 4, 4);
    house.reset_state();
    return drawing_renderer.world.add(house);
  };

  ground = null;

  init_ground = function() {
    var far_ground;
    ground = new UTIL.geometry_2d();
    ground.add_vertex([-8, 3]);
    ground.add_vertex([8, 3]);
    ground.reset_state();
    drawing_renderer.world.add(ground);
    far_ground = new UTIL.geometry_2d();
    far_ground.add_vertex([-8, 3]);
    far_ground.add_vertex([8, 3]);
    vec3.set(far_ground.states["default"].translate_vec, 0, 0, -5);
    far_ground.reset_state();
    return drawing_renderer.world.add(far_ground);
  };

  person = null;

  init_person = function() {
    person = new PERSON.person();
    window.person = person;
    return drawing_renderer.world.add(person);
  };

  render_graphics = function() {
    graphics.clear();
    graphics.lineStyle(3, 0x5c6274);
    person.do_stuff();
    return drawing_renderer.render_world();
  };

  animate = function() {
    renderer.render(stage);
    return requestAnimationFrame(animate);
  };

  person_facing_right = 1;

  flip_person = function() {
    person.rotate_y(Math.PI);
    return person_facing_right = !person_facing_right;
  };

 var something = function(event) {
    console.log(event.which);
    switch (event.which) {
      case 37:
        return drawing_renderer.rotate_y(0.05);
      case 38:
        return drawing_renderer.rotate_x(-0.05);
      case 39:
        return drawing_renderer.rotate_y(-0.05);
      case 40:
        return drawing_renderer.rotate_x(0.05);
      case 65:
        return person.angry();
      case 72:
        return person.happy();
      case 83:
        return person.sad();
      case 88:
        return drawing_renderer.translate(0, 0, 1);
      case 90:
        return drawing_renderer.translate(0, 0, -1);
      case 87:
        return person.toggle_walk();
    }
  };

  init();

}).call(this);

/*
//@ sourceMappingURL=test.map
*/
