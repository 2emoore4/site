// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.PERSON = {};

  PERSON.person = (function(_super) {
    __extends(person, _super);

    function person() {
      this.frame = 0;
      this.head_rotation = vec3.create();
      this.head_rotation[0] = 0;
      this.energy = 40;
      this.walking = false;
      this.walk_speed = 3;
      this.sync_breaker = Math.random() * 3;
      this.head_anim = false;
      person.__super__.constructor.call(this);
      this.hip = new UTIL.geometry_2d();
      window.hip = this.hip;
      this.hip.add_vertex([-0.25, 0]);
      this.hip.add_vertex([0.25, 0]);
      this.add(this.hip);
      this.r_upper_leg = new UTIL.geometry_2d();
      this.r_upper_leg.add_vertex([0, 0]);
      this.r_upper_leg.add_vertex([0, 1.27]);
      this.hip.add(this.r_upper_leg);
      this.r_lower_leg = new UTIL.geometry_2d();
      this.r_lower_leg.add_vertex([0, 0]);
      this.r_lower_leg.add_vertex([0, 1.27]);
      this.r_upper_leg.add(this.r_lower_leg);
      this.l_upper_leg = new UTIL.geometry_2d();
      this.l_upper_leg.add_vertex([0, 0]);
      this.l_upper_leg.add_vertex([0, 1.27]);
      this.hip.add(this.l_upper_leg);
      this.l_lower_leg = new UTIL.geometry_2d();
      this.l_lower_leg.add_vertex([0, 0]);
      this.l_lower_leg.add_vertex([0, 1.27]);
      this.l_upper_leg.add(this.l_lower_leg);
      this.torso = new UTIL.geometry_2d();
      this.torso.add_vertex([0, 0]);
      this.torso.add_vertex([0, -2]);
      this.hip.add(this.torso);
      this.shoulders = new UTIL.geometry_2d();
      this.torso.add(this.shoulders);
      this.r_shoulder = new UTIL.geometry_2d();
      this.r_shoulder.add_vertex([0, 0]);
      this.r_shoulder.add_vertex([-0.25, 0]);
      this.shoulders.add(this.r_shoulder);
      this.l_shoulder = new UTIL.geometry_2d();
      this.l_shoulder.add_vertex([0, 0]);
      this.l_shoulder.add_vertex([0.25, 0]);
      this.shoulders.add(this.l_shoulder);
      this.l_arm = new UTIL.geometry_2d();
      this.l_arm.add_vertex([0, 0]);
      this.l_arm.add_vertex([1, 0]);
      this.l_shoulder.add(this.l_arm);
      this.l_fore = new UTIL.geometry_2d();
      this.l_fore.add_vertex([0, 0]);
      this.l_fore.add_vertex([1, 0]);
      this.l_arm.add(this.l_fore);
      this.r_arm = new UTIL.geometry_2d();
      this.r_arm.add_vertex([0, 0]);
      this.r_arm.add_vertex([-1, 0]);
      this.r_shoulder.add(this.r_arm);
      this.r_fore = new UTIL.geometry_2d();
      this.r_fore.add_vertex([0, 0]);
      this.r_fore.add_vertex([-1, 0]);
      this.r_arm.add(this.r_fore);
      this.neck = new UTIL.geometry_2d();
      this.neck.add_vertex([0, 0]);
      this.neck.add_vertex([0, -0.5]);
      this.shoulders.add(this.neck);
      this.head = new UTIL.geometry_2d();
      this.head.add_vertex([-0.5, 0]);
      this.head.add_vertex([0.5, 0]);
      this.head.add_vertex([0, -1]);
      this.head.add_vertex([-0.5, 0]);
      this.neck.add(this.head);
      this.r_brow = new UTIL.geometry_2d();
      this.r_brow.add_vertex([0, 0]);
      this.r_brow.add_vertex([0.15, 0]);
      this.head.add(this.r_brow);
      this.l_brow = new UTIL.geometry_2d();
      this.l_brow.add_vertex([0, 0]);
      this.l_brow.add_vertex([-0.15, 0]);
      this.head.add(this.l_brow);
      this.mouth = new UTIL.geometry_2d();
      this.mouth.add_vertex([-0.15, -0.05]);
      this.mouth.add_vertex([0, 0]);
      this.mouth.add_vertex([0.15, -0.05]);
      this.head.add(this.mouth);
      vec3.set(this.hip.states["default"].translate_vec, 0, 0.5, 0);
      vec3.set(this.r_upper_leg.states["default"].translate_vec, -0.25, 0, 0);
      vec3.set(this.r_upper_leg.states["default"].rotate_vec, 0, 0, 0.15);
      vec3.set(this.r_lower_leg.states["default"].translate_vec, 0, 1.27, 0);
      vec3.set(this.l_upper_leg.states["default"].translate_vec, 0.25, 0, 0);
      vec3.set(this.l_upper_leg.states["default"].rotate_vec, 0, 0, -0.15);
      vec3.set(this.l_lower_leg.states["default"].translate_vec, 0, 1.27, 0);
      vec3.set(this.shoulders.states["default"].translate_vec, 0, -2, 0);
      vec3.set(this.l_arm.states["default"].translate_vec, 0.25, 0, 0);
      vec3.set(this.l_arm.states["default"].rotate_vec, 0, 0, 1.4);
      vec3.set(this.l_fore.states["default"].translate_vec, 1, 0, 0);
      vec3.set(this.l_fore.states["default"].rotate_vec, 0.5, 0, 0.2);
      vec3.set(this.r_arm.states["default"].translate_vec, -0.25, 0, 0);
      vec3.set(this.r_arm.states["default"].rotate_vec, 0, 0, -1.4);
      vec3.set(this.r_fore.states["default"].translate_vec, -1, 0, 0);
      vec3.set(this.r_fore.states["default"].rotate_vec, 0.5, 0, -0.2);
      vec3.set(this.head.states["default"].translate_vec, 0, -0.5, 0);
      vec3.set(this.r_brow.states["default"].translate_vec, 0.05, -0.5, 0);
      vec3.set(this.l_brow.states["default"].translate_vec, -0.05, -0.5, 0);
      vec3.set(this.mouth.states["default"].translate_vec, 0, -0.2, 0);
      this.reset_state();
      this.create_state("sitting");
      vec3.set(this.r_upper_leg.states["sitting"].rotate_vec, Math.PI / 2, 0, 0.15);
      vec3.set(this.r_lower_leg.states["sitting"].rotate_vec, -Math.PI / 2, 0, 0);
      vec3.set(this.l_upper_leg.states["sitting"].rotate_vec, Math.PI / 2, 0, -0.15);
      vec3.set(this.l_lower_leg.states["sitting"].rotate_vec, -Math.PI / 2, 0, 0);
      vec3.set(this.hip.states["sitting"].translate_vec, 0, 1.5, -1);
      vec3.set(this.torso.states["sitting"].rotate_vec, -0.2, 0, 0);
      vec3.set(this.neck.states["sitting"].rotate_vec, 0.1, 0, 0);
      vec3.set(this.r_arm.states["sitting"].rotate_vec, 0.2, 0, -1.4);
      vec3.set(this.r_fore.states["sitting"].rotate_vec, 1.5, 0, -0.2);
      vec3.set(this.l_arm.states["sitting"].rotate_vec, 0.2, 0, 1.4);
      vec3.set(this.l_fore.states["sitting"].rotate_vec, 1.5, 0, 0.2);
    }

    person.prototype.update_head = function() {
      this.head.set_rotation_x(this.head_rotation[0] + noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 0.2);
      this.head.set_rotation_y(this.head_rotation[1] + noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 1);
      return this.head.set_rotation_z(this.head_rotation[2] + noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 0.2);
    };

    person.prototype.update_arms = function() {
      this.r_arm.set_rotation_x(noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 0.2);
      this.r_arm.set_rotation_y(noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 1);
      this.r_arm.set_rotation_z(-1.4 + noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 0.2);
      this.l_arm.set_rotation_x(noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 0.2);
      this.l_arm.set_rotation_y(noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 1);
      return this.l_arm.set_rotation_z(1.4 + noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 0.2);
    };

    person.prototype.wave = function() {
      this.r_arm.set_rotation_z(-0.3);
      this.r_fore.set_rotation_x(0);

        for (var i = 0; i < 30; i++) {
            (function(fore, i) {
                setTimeout(function() {
                    fore.set_rotation_z(1.37 + Math.sin(i / 1.7) / 1.4);
                }, 60 * i);
            }).call(this, this.r_fore, i);
        }
        (function(arm, fore) {
            setTimeout(function() {
                arm.set_rotation_z(-1.4);
                fore.set_rotation_x(0.5);
                fore.set_rotation_z(-0.2);
            }, 1800);
        }).call(this, this.r_arm, this.r_fore);
        ;
      return null;
    };

    person.prototype.update_torso = function() {
      this.torso.set_rotation_x(noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 0.1);
      this.torso.set_rotation_y(noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 0.1);
      return this.torso.set_rotation_z(noise.perlin2(this.frame / this.energy, this.frame / this.energy) * 0.1);
    };

    person.prototype.walk = function() {
      this.hip.set_translation(0, 0.6 - Math.abs(Math.cos(this.frame / this.walk_speed + this.sync_breaker) / 10), 0);
      this.hip.set_rotation_z(Math.sin(this.frame / this.walk_speed + this.sync_breaker) / 50);
      this.hip.set_rotation_y(-Math.sin(this.frame / this.walk_speed + this.sync_breaker) / 10);
      this.shoulders.set_rotation_y(Math.sin(this.frame / this.walk_speed + this.sync_breaker) / 10);
      this.torso.set_rotation_z(Math.cos(this.frame / this.walk_speed + this.sync_breaker - 2) / 40);
      this.torso.set_rotation_x(-0.1 + Math.sin(this.frame / this.walk_speed + this.sync_breaker / 2 - 1.5) / 40);
      this.neck.set_rotation_x(Math.sin(this.frame / this.walk_speed + this.sync_breaker / 2) / 20);
      this.r_upper_leg.set_rotation_x(-Math.sin(this.frame / this.walk_speed + this.sync_breaker) / 2.5 + 0.2);
      this.r_upper_leg.set_rotation_z(0);
      this.l_upper_leg.set_rotation_x(-Math.sin(this.frame / this.walk_speed + this.sync_breaker - Math.PI) / 2.5 + 0.2);
      this.l_upper_leg.set_rotation_z(0);
      this.r_lower_leg.set_rotation_x(-Math.PI / 8 + Math.sin(this.frame / this.walk_speed + this.sync_breaker) / 4);
      this.l_lower_leg.set_rotation_x(-Math.PI / 8 + Math.sin(this.frame / this.walk_speed + this.sync_breaker - Math.PI) / 4);
      this.r_arm.set_rotation_z(-Math.PI / 2 + 0.05);
      this.r_arm.set_rotation_x(Math.sin(this.frame / this.walk_speed + this.sync_breaker) / 2);
      this.r_fore.set_rotation_z(0);
      this.r_fore.set_rotation_y(0.2 + Math.sin(this.frame / this.walk_speed + this.sync_breaker - 1) / 5);
      this.l_arm.set_rotation_z(Math.PI / 2 - 0.05);
      this.l_arm.set_rotation_x(-Math.sin(this.frame / this.walk_speed + this.sync_breaker) / 2);
      this.l_fore.set_rotation_z(0);
      return this.l_fore.set_rotation_y(-0.2 + Math.sin(this.frame / this.walk_speed + this.sync_breaker - 1) / 5);
    };

    person.prototype.toggle_walk = function() {
      if (this.walking) {
        this.stand();
      }
      return this.walking = !this.walking;
    };

    person.prototype.stand = function() {
      return this.reset_state();
    };

    person.prototype.sit = function() {
      return this.change_state("sitting");
    };

    person.prototype.do_stuff = function() {
      if (this.walking) {
        this.walk();
      }
      if (!this.head_anim) {
        this.update_head();
      }
      return this.frame += 1;
    };

    person.prototype.shake_head = function() {

        for (var i = 0; i < 17; i++) {
            (function(head, i) {
                setTimeout(function() {
                    head.set_rotation_y(Math.sin(i / 1.7) / 1.4);
                }, 40 * i);
            }).call(this, this.head, i);
        }
        ;
      return null;
    };

    person.prototype.nod_head = function() {

        for (var i = 0; i < 19; i++) {
            (function(head, i) {
                setTimeout(function() {
                    head.set_rotation_x(Math.sin(i / 1.7 + Math.PI) / 2.5 - 0.5);
                }, 40 * i);
            }).call(this, this.head, i);
        }
        ;
      return null;
    };

    person.prototype.shrug_shoulders = function() {

        for (var i = 0; i < Math.PI; i += 0.1) {
            (function(r_shoulder, l_shoulder, i) {
                setTimeout(function() {
                    r_shoulder.set_translation(0, -Math.sin(i) / 8, 0);
                    r_shoulder.set_rotation_z(Math.sin(i) / 6);
                    l_shoulder.set_translation(0, -Math.sin(i) / 8, 0);
                    l_shoulder.set_rotation_z(-Math.sin(i) / 6);
                }, 120 * i);
            }).call(this, this.r_shoulder, this.l_shoulder, i);
        }
        ;
      return null;
    };

    person.prototype.happy = function() {
      this.angry_wave = false;
      this.energy = 40;
      this.l_brow.set_rotation_z(0);
      this.r_brow.set_rotation_z(0);
      this.wave_speed = 2;
      this.wave_position = -1.37;
      this.head_rotation[0] = 0;
      this.mouth.vertices[0][1] = -0.05;
      this.mouth.vertices[2][1] = -0.05;
      return this.walk_speed = 3;
    };

    person.prototype.angry = function() {
      this.happy();
      this.energy = 5;
      this.l_brow.set_rotation_z(0.4);
      this.r_brow.set_rotation_z(-0.4);
      this.angry_wave = true;
      this.wave_speed = 1;
      this.wave_position = 0;
      this.mouth.vertices[0][1] = 0;
      this.mouth.vertices[2][1] = 0;
      return this.walk_speed = 2;
    };

    person.prototype.sad = function() {
      this.l_brow.set_rotation_z(-0.4);
      this.r_brow.set_rotation_z(0.4);
      this.angry_wave = false;
      this.energy = 100;
      this.wave_speed = 4;
      this.wave_position = -1.75;
      this.head_rotation[0] = -1.1;
      this.mouth.vertices[0][1] = 0.05;
      this.mouth.vertices[2][1] = 0.05;
      return this.walk_speed = 4;
    };

    return person;

  })(UTIL.geometry_2d);

}).call(this);

/*
//@ sourceMappingURL=person.map
*/
